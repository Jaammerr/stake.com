
class JsonQueries:

    @classmethod
    def all_sport_bets(cls, limit: int = 40) -> dict:
        return {
            'query': 'query highrollerSportBets($limit: Int!) {\n  highrollerSportBets(limit: $limit) {\n    id\n    iid\n    bet {\n      __typename\n      ... on SwishBet {\n        __typename\n        id\n        updatedAt\n        potentialMultiplier\n        amount\n        currency\n        user {\n          id\n          name\n          preferenceHideBets\n        }\n        outcomes {\n          __typename\n          id\n          odds\n          outcome {\n            __typename\n            id\n            market {\n              id\n              competitor {\n                name\n              }\n              game {\n                id\n                fixture {\n                  id\n                  tournament {\n                    id\n                    category {\n                      id\n                      sport {\n                        id\n                        slug\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      ... on SportBet {\n        __typename\n        id\n        updatedAt\n        potentialMultiplier\n        amount\n        currency\n        user {\n          id\n          name\n          preferenceHideBets\n        }\n        outcomes {\n          id\n          odds\n          fixtureAbreviation\n          fixtureName\n          fixture {\n            id\n            tournament {\n              id\n              category {\n                id\n                sport {\n                  id\n                  slug\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n',
            'variables': {
                'limit': 40,
            },
        }


    @classmethod
    def bet_lookup(cls, iid: str) -> dict:
        return {
            'query': 'query BetLookup($iid: String, $betId: String) {\n  bet(iid: $iid, betId: $betId) {\n    ...BetFragment\n    __typename\n  }\n}\n\nfragment BetFragment on Bet {\n  id\n  iid\n  type\n  scope\n  game {\n    name\n    icon\n    slug\n    __typename\n  }\n  bet {\n    ... on CasinoBet {\n      ...CasinoBet\n      user {\n        id\n        name\n        preferenceHideBets\n        __typename\n      }\n      __typename\n    }\n    ... on EvolutionBet {\n      ...EvolutionBet\n      user {\n        id\n        name\n        preferenceHideBets\n        __typename\n      }\n      __typename\n    }\n    ... on MultiplayerCrashBet {\n      ...MultiplayerCrashBet\n      user {\n        id\n        name\n        preferenceHideBets\n        __typename\n      }\n      __typename\n    }\n    ... on MultiplayerSlideBet {\n      ...MultiplayerSlideBet\n      user {\n        id\n        name\n        preferenceHideBets\n        __typename\n      }\n      __typename\n    }\n    ... on SoftswissBet {\n      ...SoftswissBet\n      user {\n        id\n        name\n        preferenceHideBets\n        __typename\n      }\n      __typename\n    }\n    ... on ThirdPartyBet {\n      ...ThirdPartyBet\n      __typename\n    }\n    ... on SportBet {\n      ...SportBet\n      promotionBet {\n        payout\n        status\n        currency\n        payoutValue\n        promotion {\n          name\n          __typename\n        }\n        __typename\n      }\n      user {\n        id\n        name\n        preferenceHideBets\n        __typename\n      }\n      __typename\n    }\n    ... on SwishBet {\n      ...SwishBetFragment\n      user {\n        id\n        name\n        preferenceHideBets\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment CasinoBet on CasinoBet {\n  id\n  active\n  payoutMultiplier\n  amountMultiplier\n  amount\n  payout\n  updatedAt\n  currency\n  game\n  user {\n    id\n    name\n    __typename\n  }\n}\n\nfragment EvolutionBet on EvolutionBet {\n  id\n  amount\n  currency\n  createdAt\n  payout\n  payoutMultiplier\n  user {\n    id\n    name\n    __typename\n  }\n  softswissGame: game {\n    id\n    name\n    edge\n    __typename\n  }\n}\n\nfragment MultiplayerCrashBet on MultiplayerCrashBet {\n  id\n  user {\n    id\n    name\n    preferenceHideBets\n    __typename\n  }\n  payoutMultiplier\n  gameId\n  amount\n  payout\n  currency\n  result\n  updatedAt\n  cashoutAt\n  btcAmount: amount(currency: btc)\n}\n\nfragment MultiplayerSlideBet on MultiplayerSlideBet {\n  id\n  user {\n    id\n    name\n    preferenceHideBets\n    __typename\n  }\n  payoutMultiplier\n  gameId\n  amount\n  payout\n  currency\n  slideResult: result\n  updatedAt\n  cashoutAt\n  btcAmount: amount(currency: btc)\n  active\n  createdAt\n}\n\nfragment SoftswissBet on SoftswissBet {\n  id\n  amount\n  currency\n  updatedAt\n  payout\n  payoutMultiplier\n  user {\n    id\n    name\n    __typename\n  }\n  softswissGame: game {\n    id\n    name\n    edge\n    extId\n    provider {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ThirdPartyBet on ThirdPartyBet {\n  id\n  amount\n  currency\n  updatedAt\n  payout\n  payoutMultiplier\n  betReplay\n  user {\n    id\n    name\n    __typename\n  }\n  thirdPartyGame: game {\n    id\n    name\n    edge\n    extId\n    provider {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment SportBet on SportBet {\n  __typename\n  id\n  customBet\n  amount\n  active\n  currency\n  status\n  payoutMultiplier\n  cashoutMultiplier\n  updatedAt\n  payout\n  createdAt\n  potentialMultiplier\n  adjustments {\n    id\n    payoutMultiplier\n    updatedAt\n    createdAt\n    __typename\n  }\n  promotionBet {\n    settleType\n    status\n    payout\n    currency\n    promotion {\n      name\n      __typename\n    }\n    __typename\n  }\n  user {\n    id\n    name\n    __typename\n  }\n  bet {\n    iid\n    __typename\n  }\n  outcomes {\n    __typename\n    odds\n    status\n    outcome {\n      __typename\n      ...SportMarketOutcome\n    }\n    market {\n      ...SportMarket\n      __typename\n    }\n    fixture {\n      id\n      status\n      slug\n      provider\n      marketCount(status: [active, suspended])\n      extId\n      data {\n        ...SportFixtureDataMatch\n        ...SportFixtureDataOutright\n        __typename\n      }\n      tournament {\n        ...TournamentTreeNested\n        __typename\n      }\n      eventStatus {\n        ...SportOutcomeFixtureEventStatus\n        ...EsportOutcomeFixtureEventStatus\n        __typename\n      }\n      ...SportFixtureLiveStreamExists\n      __typename\n    }\n  }\n}\n\nfragment SportMarketOutcome on SportMarketOutcome {\n  active\n  id\n  odds\n  name\n  customBetAvailable\n  __typename\n}\n\nfragment SportMarket on SportMarket {\n  id\n  name\n  status\n  extId\n  specifiers\n  customBetAvailable\n  provider\n}\n\nfragment SportFixtureDataMatch on SportFixtureDataMatch {\n  startTime\n  competitors {\n    ...SportFixtureCompetitor\n    __typename\n  }\n  teams {\n    name\n    qualifier\n    __typename\n  }\n  tvChannels {\n    language\n    name\n    streamUrl\n    __typename\n  }\n  __typename\n}\n\nfragment SportFixtureCompetitor on SportFixtureCompetitor {\n  name\n  extId\n  countryCode\n  abbreviation\n  iconPath\n}\n\nfragment SportFixtureDataOutright on SportFixtureDataOutright {\n  name\n  startTime\n  endTime\n  __typename\n}\n\nfragment TournamentTreeNested on SportTournament {\n  id\n  name\n  slug\n  category {\n    ...CategoryTreeNested\n    __typename\n  }\n}\n\nfragment CategoryTreeNested on SportCategory {\n  id\n  name\n  slug\n  sport {\n    id\n    name\n    slug\n    __typename\n  }\n}\n\nfragment SportOutcomeFixtureEventStatus on SportFixtureEventStatusData {\n  homeScore\n  awayScore\n  matchStatus\n  clock {\n    matchTime\n    remainingTime\n    __typename\n  }\n  periodScores {\n    homeScore\n    awayScore\n    matchStatus\n    __typename\n  }\n  currentTeamServing\n  homeGameScore\n  awayGameScore\n  statistic {\n    yellowCards {\n      away\n      home\n      __typename\n    }\n    redCards {\n      away\n      home\n      __typename\n    }\n    corners {\n      home\n      away\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment EsportOutcomeFixtureEventStatus on EsportFixtureEventStatus {\n  matchStatus\n  homeScore\n  awayScore\n  scoreboard {\n    homeGold\n    awayGold\n    homeGoals\n    awayGoals\n    homeKills\n    awayKills\n    gameTime\n    homeDestroyedTowers\n    awayDestroyedTurrets\n    currentRound\n    currentCtTeam\n    currentDefTeam\n    time\n    awayWonRounds\n    homeWonRounds\n    remainingGameTime\n    __typename\n  }\n  periodScores {\n    type\n    number\n    awayGoals\n    awayKills\n    awayScore\n    homeGoals\n    homeKills\n    homeScore\n    awayWonRounds\n    homeWonRounds\n    matchStatus\n    __typename\n  }\n  __typename\n}\n\nfragment SportFixtureLiveStreamExists on SportFixture {\n  id\n  betradarStream {\n    exists\n    __typename\n  }\n  imgArenaStream {\n    exists\n    __typename\n  }\n  abiosStream {\n    exists\n    stream {\n      startTime\n      id\n      __typename\n    }\n    __typename\n  }\n  geniussportsStream(deliveryType: hls) {\n    exists\n    __typename\n  }\n}\n\nfragment SwishBetFragment on SwishBet {\n  __typename\n  active\n  amount\n  cashoutMultiplier\n  createdAt\n  currency\n  customBet\n  id\n  odds\n  payout\n  payoutMultiplier\n  updatedAt\n  status\n  user {\n    id\n    name\n    preferenceHideBets\n    __typename\n  }\n  outcomes {\n    __typename\n    id\n    odds\n    lineType\n    outcome {\n      ...SwishMarketOutcomeFragment\n      __typename\n    }\n  }\n}\n\nfragment SwishMarketOutcomeFragment on SwishMarketOutcome {\n  __typename\n  id\n  line\n  over\n  under\n  gradeOver\n  gradeUnder\n  suspended\n  balanced\n  name\n  competitor {\n    id\n    name\n    stats {\n      name\n      dataConfirmed\n      played\n      __typename\n    }\n    __typename\n  }\n  market {\n    id\n    stat {\n      name\n      value\n      __typename\n    }\n    game {\n      id\n      fixture {\n        id\n        name\n        slug\n        status\n        provider\n        swishGame {\n          swishSportId\n          __typename\n        }\n        eventStatus {\n          ...SportFixtureEventStatus\n          ...EsportFixtureEventStatus\n          __typename\n        }\n        data {\n          ... on SportFixtureDataMatch {\n            __typename\n            startTime\n            competitors {\n              name\n              extId\n              countryCode\n              abbreviation\n              __typename\n            }\n          }\n          __typename\n        }\n        tournament {\n          id\n          slug\n          name\n          category {\n            id\n            slug\n            name\n            sport {\n              id\n              name\n              slug\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment SportFixtureEventStatus on SportFixtureEventStatusData {\n  __typename\n  homeScore\n  awayScore\n  matchStatus\n  clock {\n    matchTime\n    remainingTime\n    __typename\n  }\n  periodScores {\n    homeScore\n    awayScore\n    matchStatus\n    __typename\n  }\n  currentTeamServing\n  homeGameScore\n  awayGameScore\n  statistic {\n    yellowCards {\n      away\n      home\n      __typename\n    }\n    redCards {\n      away\n      home\n      __typename\n    }\n    corners {\n      home\n      away\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment EsportFixtureEventStatus on EsportFixtureEventStatus {\n  matchStatus\n  homeScore\n  awayScore\n  scoreboard {\n    homeGold\n    awayGold\n    homeGoals\n    awayGoals\n    homeKills\n    awayKills\n    gameTime\n    homeDestroyedTowers\n    awayDestroyedTurrets\n    currentRound\n    currentCtTeam\n    currentDefTeam\n    time\n    awayWonRounds\n    homeWonRounds\n    remainingGameTime\n    __typename\n  }\n  periodScores {\n    type\n    number\n    awayGoals\n    awayKills\n    awayScore\n    homeGoals\n    homeKills\n    homeScore\n    awayWonRounds\n    homeWonRounds\n    matchStatus\n    __typename\n  }\n  __typename\n}\n',
            'operationName': 'BetLookup',
            'variables': {
                'iid': iid,
            },
        }


    @classmethod
    def currency_conversion_rate(cls) -> dict:
        return {
            'query': 'query CurrencyConversionRate {\n  info {\n    currencies {\n      name\n      eur: value(fiatCurrency: eur)\n      jpy: value(fiatCurrency: jpy)\n      usd: value(fiatCurrency: usd)\n      ars: value(fiatCurrency: ars)\n      brl: value(fiatCurrency: brl)\n      cad: value(fiatCurrency: cad)\n      clp: value(fiatCurrency: clp)\n      cny: value(fiatCurrency: cny)\n      dkk: value(fiatCurrency: dkk)\n      idr: value(fiatCurrency: idr)\n      inr: value(fiatCurrency: inr)\n      krw: value(fiatCurrency: krw)\n      mxn: value(fiatCurrency: mxn)\n      pen: value(fiatCurrency: pen)\n      php: value(fiatCurrency: php)\n      pln: value(fiatCurrency: pln)\n      rub: value(fiatCurrency: rub)\n      try: value(fiatCurrency: try)\n      vnd: value(fiatCurrency: vnd)\n    }\n  }\n}\n',
            'variables': {},
        }
